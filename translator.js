// Braille Translator JavaScript
document.addEventListener('DOMContentLoaded', function() {
    
    // –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –ë—Ä–∞–π–ª—å
    const englishToBrailleMap = {
        'a': '‚†Å', 'b': '‚†É', 'c': '‚†â', 'd': '‚†ô', 'e': '‚†ë',
        'f': '‚†ã', 'g': '‚†õ', 'h': '‚†ì', 'i': '‚†ä', 'j': '‚†ö',
        'k': '‚†Ö', 'l': '‚†á', 'm': '‚†ç', 'n': '‚†ù', 'o': '‚†ï',
        'p': '‚†è', 'q': '‚†ü', 'r': '‚†ó', 's': '‚†é', 't': '‚†û',
        'u': '‚†•', 'v': '‚†ß', 'w': '‚†∫', 'x': '‚†≠', 'y': '‚†Ω', 'z': '‚†µ',
        
        '1': '‚†º‚†Å', '2': '‚†º‚†É', '3': '‚†º‚†â', '4': '‚†º‚†ô', '5': '‚†º‚†ë',
        '6': '‚†º‚†ã', '7': '‚†º‚†õ', '8': '‚†º‚†ì', '9': '‚†º‚†ä', '0': '‚†º‚†ö',
        
        '.': '‚†≤', ',': '‚†Ç', '?': '‚†¶', '!': '‚†ñ', ';': '‚†Ü',
        ':': '‚†í', '-': '‚†§', '(': '‚†ê‚†£', ')': '‚†ê‚†ú',
        '"': '‚†¶', "'": '‚†Ñ', '/': '‚†∏‚†å', '@': '‚†à‚†Å',
        
        ' ': ' ', '\n': '\n', '\r': '', '\t': ' '
    };

    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    const mainInput = document.getElementById('mainInput');
    const mainOutput = document.getElementById('mainOutput');
    const swapBtn = document.getElementById('swapBtn');
    const copyBtn = document.getElementById('copyBtn');
    const charCount = document.getElementById('charCount');
    const leftLanguage = document.getElementById('leftLanguage');
    const rightLanguage = document.getElementById('rightLanguage');
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
    let isEnglishToBraille = true;

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –ë—Ä–∞–π–ª—å
    function translateToBraille(text) {
        let result = '';
        let capitalNext = false;
        
        for (let i = 0; i < text.length; i++) {
            const char = text[i];
            const lowerChar = char.toLowerCase();
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤
            if (char !== lowerChar && /[a-z]/.test(lowerChar)) {
                if (!capitalNext) {
                    result += '‚††'; // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
                    capitalNext = true;
                }
            } else {
                capitalNext = false;
            }
            
            // –ü–µ—Ä–µ–≤–æ–¥ —Å–∏–º–≤–æ–ª–∞
            if (englishToBrailleMap[lowerChar]) {
                result += englishToBrailleMap[lowerChar];
            } else {
                result += char;
            }
        }
        
        return result;
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–∑ –ë—Ä–∞–π–ª—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π (–±–∞–∑–æ–≤–∞—è)
    function translateFromBraille(brailleText) {
        const brailleToEnglish = {};
        // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å
        for (const [english, braille] of Object.entries(englishToBrailleMap)) {
            if (braille !== ' ' && braille !== '\n') {
                brailleToEnglish[braille] = english;
            }
        }
        
        let result = '';
        let i = 0;
        
        while (i < brailleText.length) {
            const char = brailleText[i];
            
            if (char === ' ') {
                result += ' ';
                i++;
            } else if (char === '\n') {
                result += '\n';
                i++;
            } else if (char === '‚††') { // –ó–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞
                i++;
                if (i < brailleText.length) {
                    const nextChar = brailleText[i];
                    const letter = brailleToEnglish[nextChar];
                    if (letter) {
                        result += letter.toUpperCase();
                    }
                    i++;
                }
            } else {
                const letter = brailleToEnglish[char];
                if (letter) {
                    result += letter;
                } else {
                    result += char; // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
                }
                i++;
            }
        }
        
        return result;
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤
    function updateCharCount() {
        const count = mainInput.value.length;
        charCount.textContent = count;
        
        if (count >= 450) {
            charCount.style.color = '#ff6b6b';
        } else if (count >= 400) {
            charCount.style.color = '#ffa500';
        } else {
            charCount.style.color = '#666666';
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    function performRealTimeTranslation() {
        const inputText = mainInput.value;
        
        if (!inputText) {
            mainOutput.innerHTML = '<div class="placeholder">Translation will appear here</div>';
            copyBtn.disabled = true;
            return;
        }

        let translatedText;
        if (isEnglishToBraille) {
            translatedText = translateToBraille(inputText);
        } else {
            translatedText = translateFromBraille(inputText);
        }
        
        mainOutput.textContent = translatedText;
        copyBtn.disabled = false;
    }

    // –§—É–Ω–∫—Ü–∏—è —Å–º–µ–Ω—ã —è–∑—ã–∫–æ–≤
    function swapLanguages() {
        isEnglishToBraille = !isEnglishToBraille;
        
        // –ú–µ–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∏ —è–∑—ã–∫–æ–≤
        if (isEnglishToBraille) {
            leftLanguage.textContent = 'English';
            rightLanguage.textContent = 'Braille';
            mainInput.placeholder = 'Enter text';
        } else {
            leftLanguage.textContent = 'Braille';
            rightLanguage.textContent = 'English';
            mainInput.placeholder = 'Enter Braille text';
        }
        
        // –ú–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–µ—Å—Ç–∞–º–∏
        const inputContent = mainInput.value;
        const outputContent = mainOutput.textContent;
        
        if (outputContent && !outputContent.includes('Translation will appear here')) {
            mainInput.value = outputContent;
            mainOutput.textContent = inputContent;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
        performRealTimeTranslation();
        updateCharCount();
        
        // –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç
        if (window.playBeep) {
            playBeep(600, 100, 0.1);
            setTimeout(() => playBeep(800, 100, 0.1), 150);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    function copyToClipboard() {
        const outputText = mainOutput.textContent;
        
        if (!outputText || outputText.includes('Translation will appear here')) {
            return;
        }

        navigator.clipboard.writeText(outputText).then(() => {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            copyBtn.style.color = '#4ade80';
            
            setTimeout(() => {
                copyBtn.style.color = '';
            }, 2000);

            // –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç
            if (window.playBeep) {
                playBeep(1000, 150, 0.08);
            }
        }).catch(() => {
            copyBtn.style.color = '#ef4444';
            setTimeout(() => {
                copyBtn.style.color = '';
            }, 2000);
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    mainInput.addEventListener('input', function() {
        updateCharCount();
        performRealTimeTranslation();
    });
    
    mainInput.addEventListener('keydown', function(e) {
        if (e.key === 'Tab' && e.ctrlKey) {
            e.preventDefault();
            swapLanguages();
        }
    });

    swapBtn.addEventListener('click', swapLanguages);
    copyBtn.addEventListener('click', copyToClipboard);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    updateCharCount();
    mainInput.focus();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
    mainInput.setAttribute('title', 'Press Ctrl+Tab to swap languages');
    swapBtn.setAttribute('title', 'Swap languages');

    console.log('üîÑ Real-time Braille Translator loaded!');
});